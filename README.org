# Local Variables:
# fill-column: 70
# org-adapt-indentation: nil
# org-download-image-dir: "./img/"
# eval: (auto-fill-mode)
# End:
#+title: entropy-unfill
#+author: Entropy


Emacs internal gives the feature for fill column also with unfill
thus. And each major mode has their fill or unfill rule set base the
mode specification. As the Org mode for, it's designed for literal
programming originally and gets favors from purely literary writters,
the writing habits for this case usually needs the line-wrap way for
organizing the paragraph to be more readable with proper presentation.

The context filling type is obey the '70' width in traditional way,
but there's always for people who wants to has the modification
covered the previous setting. It's the why this package built on for.

#+BEGIN_QUOTE
 Also the naming ended with 'unfill', but given for fill otherwise
 for. I named it limited for 'unfill' in the origin development
 purpose and after the beginning few days, the internal implementation
 mechanism be as overflowing the origin expection which can be both
 filling and unfilling type operation.
#+END_QUOTE

* Filling flag points

For the minor case of filling/unfilling the single object (as one
paragraph or some others code blocks), this operation for this was
really simple for just giving the single interactived function calling
for ~fill-paragraph~, but for the whole buffer treatment. The tough
for the whole buffer doing for was how to identify for which parts for
treating as filling/unfilling statament, in this case,
=entropy-unfill= gives the buffer parsing module called flag-points.

The flag-points follow the regexp matching for as extracting the
beginning for doing and the ending otherwise. Variable
=entropy/unfill-special-line-regexp= gives the oppsite meaning for
whichever do not did for, thus calling the special-flag-points. It's
easy to imagine that 'special-flag-points' can be the  denotation for
build flag-points.

The 'special-flag-points' matching list module formed as:

#+BEGIN_EXAMPLE
(list 
 (list "desc01" "begin-regex-flag" "end-regex-flag")
 (list "desc02" "begin-regex-flag" "end-regex-flag")
 ......)
#+END_EXAMPLE

If making one illustrator for the module:

#+BEGIN_EXAMPLE
    +---------------------------------------------+
    | +-----------------------------------------+ |
    | |  part 1                           t   --+-+--------------------->  part-1 of this buffer was paragraph and it will be convert to unfill.
    | |     xxxxxxxxxxxxxxxxxxxxxxxx            | |                        So the state of it was 't' .                                         
    | +-----------------------------------------+ |                                                                                            
    | +-----------------------------------------+ |                                                                                            
    | |  part 2                                 | |                                                                                            
    | |   #+begin_src                     nil --+-+--------------------->  part-2 was code area and do not convert it, state 'nil.             
    | |      ......                             | |                                                                            
    | |   #+end_src                             | |                                                                            
    | +-----------------------------------------+ |                                                                            
    | +-----------------------------------------+ |                                                                            
    | |  part 3                                 | |                                                                            
    | |    - xxxxxx                       nil --+-+--------------------->  part-3 was list , so setting converted state to nil.
    | |    - xxxxxx                             | |                                                                           
    | +-----------------------------------------+ |                                                                           
    | +-----------------------------------------+ |                                                                           
    | |  part 4                                 | |                                                                  
    | |                                         | |                                                                  
    | |   | xx | xx | xx |                      | |                           
    | |   |----|----|----|                nil --+-+--------------------->  part-4 was table formal so setting converted state to nil
    | |   | xx | xx | xx |                      | |                                                                                 
    | |   | xx | xx | xx |                      | |                                                                                 
    | |                                         | |                                                                                 
    | +-----------------------------------------+ |                                
    | +-----------------------------------------+ |                                
    | |  part 5                                 | |                      
    | |                                         | |                      
    | |       ...............               t --+-+--------------------->  part-5 was specific area which must be converted to.
    | |                                         | |                                  
    | +-----------------------------------------+ |                                  
    +---------------------------------------------+                                  
#+END_EXAMPLE 

* Requirements

As other 'entropy family' package, library =entropy-common-library=
was needed first and the other one was =entropy-org-widget= which used
for processing some org buffer feature.

* Installation

The =use-package= type way for as:

#+BEGIN_SRC elisp
  (use-package entropy-unfill
    :ensure nil
    :load-path "path-to-your-load-path"
    :commands (entropy/unfill-full-buffer-without-special-region
               entropy/unfill-paragraph
               entropy/fill-full-buffer-without-special-region))
#+END_SRC


* Configuration

Variable =entropy/unfill-special-line-regexp= customizing along with
your benefits as the mention above.

#+BEGIN_QUOTE
The original rule-set for was treated for org buffer, thus for the
other major mode hosted buffer or some individual fundamental buffer
you should specify the pertinent thing as. 
#+END_QUOTE

