#+title: entropy-emacs bugs collection
#+author: Entropy

The bug collection for emacs recoreded for =entropy-emacs=.

* Introduction
:PROPERTIES:
:CUSTOM_ID: h-3a73ab13-b8f2-4023-bc71-adf0e0bce2e5
:END:

This file archives the bugs occurrence for using =entropy-emacs=, bugs
occurs both for =vanilla emacs= or =entropy-emacs=, since some bug are
natively of specific emacs release.

All the bug recorded in this file is recognized as one todo entry
uppon on the Org-Mode feature, using org-mode to manage the whole
toto-tree for those bugs.

The todo keys are mapped specially for =entropy-emacs=, with the
following valid keys:

1) =TODO= : indicating for repairing this bug, as the marked-up way,
   but with high priority.

2) =DOING= : the current bug repairing procedure including.

3) =DONE= : bug has been fixed up.

4) =HANGUP= : can not find the ideas for fixing this bug, hoped for
   help.

5) =MARKING= : minor bug doesn't affecting using but marked for
   remembering fixing as attitude for emacser.

6) =UPDATE= : Updating the previous "DONE" status for updating the new
   issue.

7) =CANCEL= : Canceling the bug fixing task as that its hopeless for
   as.

* Conribution
:PROPERTIES:
:CUSTOM_ID: h-84966099-8b8e-4765-89f2-5b8e4181d34a
:END:

Bug fixing PR are welcom, if you have fixed one bug or finding up the
bug caused source. The PR must using the TODO keywords refered to the
above demotion to update the bug entry status and giving the new
description for the corresponding sector.

Or oppsite for bug fixing PR, you can commit new bug to this file with
limitation of the bug of vanilla emacs or =entropy-emacs=.

* Bugs
:PROPERTIES:
:CUSTOM_ID: h-d7b20c2e-f395-4d35-bfdf-e12fc00cb7ad
:END:
** HANGUP Bug for 'yes-or-no-p' (founed when using 'doom-modeline'):
CLOSED: [2019-07-29 Mon 18:44]
:PROPERTIES:
:CUSTOM_ID: h-0c3ab89e-a470-42d2-946e-4f217ea2f20c
:END:

- State "HANGUP"     from "MARKING"    [2019-07-29 Mon 18:44] \\
  Has patched by specific 'kill-buffer' action, waiting for bug reply
  from emacs-bug-mailist.


*Bug description:*

If using the modeline who using all-the-icons as the segments'
component, that when using pop-up window to show 'ansi-term' will
cause the problem during 'kill-buffer' operation for the spawn process
kill confirmation returns the error for that:

``` error-info
Debugger entered--Lisp error: (error "Selecting deleted buffer")
term-emulate-terminal(#<process *ansi-term*> "your-shell-$ps1")
```
But when you using the 'y-or-n-p' redefine the 'yes-or-no-p', its
gone.

The bug trigger also referred to font setting that if using some fonts
specific (e.g. liberation-mono fonts) unless the google-noto family
will get the error when the 'yes-or-no-p' redefination not did as
demoted in above paragraph.

*Bug Reproduce:*

1) Operation Environment:

   Platform: GNU/Linux
   Distro: Manjaro (4.19.60-1-MANJARO GNU/Linux)
   Emacs-Version: 26.x all serial
   Emacs Configuration: Vanilla

2) Put below elisp snippet into `init.el`

   #+BEGIN_SRC elisp
     (package-initialize)
     (setq custom-file (expand-file-name "custom.el" user-emacs-directory))
     (setq package-archives '(("gnu"   . "http://elpa.gnu.org/packages/")
                              ("melpa" . "http://melpa.org/packages/")
                              ("org"   . "https://orgmode.org/elpa/")))

     ;; Please install 'liberation-ttf' first
     (set-face-attribute 'default nil :family "Liberation Mono" :font "Liberation Mono")

     (defun temp/test-bug ()
       (interactive)
       (when (not (one-window-p))
         (delete-other-windows)
         (about-emacs))
       (let ((_w (split-window
                  (selected-window)
                  25
                  'below)))
         (select-window _w)
         (ansi-term "bash")
         (setq-local kill-buffer-hook nil)))

     (global-set-key (kbd "<f9>") #'temp/test-bug)

     (global-set-key (kbd "C-x k") 'kill-buffer-and-window)

     (unless (package-installed-p 'doom-modeline)
       (package-refresh-contents)
       (package-install 'doom-modeline))

     (doom-modeline-mode)
   #+END_SRC

3) Start emacs and hit '<f9>', then try to kill the selected buffer

   Notice: the "yes-or-no" input string must type correcly at the firt
   input time, otherwise the bug reproduce will not did as expecting.

** MARKING Ibus input bug for full-screen occurrence  (entropy-emacs only) :entropy-emacs:
:PROPERTIES:
:CUSTOM_ID: h-74ea996b-2f5d-4872-b5e8-2dc152e466a1
:END:

- State "MARKING"    from              [2019-07-31 Wed 01:20]


#+BEGIN_EXAMPLE
OS: Manjaro Linux (Linux 4.19.60-1-MANJARO #1 SMP PREEMPT Sun Jul 21 12:17:26 UTC 2019 x86_64 GNU/Linux)
neofetch:

entropy@entropy-pc
██████████████████  ████████   ------------------
██████████████████  ████████   OS: Manjaro Linux x86_64
██████████████████  ████████   Host: Satellite L700 PSK12Q-01600D
████████            ████████   Kernel: 4.19.60-1-MANJARO
████████  ████████  ████████   Uptime: 13 hours, 51 mins
████████  ████████  ████████   Packages: 1284 (pacman)
████████  ████████  ████████   Shell: bash 5.0.7
████████  ████████  ████████   Resolution: 1366x768
████████  ████████  ████████   DE: GNOME 3.32.2
████████  ████████  ████████   Theme: Matcha-dark-sea [GTK2/3]
████████  ████████  ████████   Icons: Papirus-Dark-Maia [GTK2/3]
████████  ████████  ████████   Terminal: gnome-terminal
████████  ████████  ████████   CPU: Intel i5-2410M (4) @ 2.900GHz
                               GPU: NVIDIA GeForce GT 525M
                               Memory: 2831MiB / 5941MiB

#+END_EXAMPLE

1) Bug description:

   When using ibus (cjk backend of =rime=) in emacs for full-screen
   occurrence, the ime-tooltip display will disapear after few chars
   typing. it's so strange.

2) Influences aspects suspects

   - Font spec configuration (e.g. =entropy-emacs-font-set.el=)
   - Ui spec configurations
   - global-disable-mouse-mode
   - shackle window popup feature (ibus tooltip losst when popout the
     shackle buffer at the first time)

** DONE =solaire-mode= can not working correctly in pdumper-session
CLOSED: [2019-09-09 Mon 05:42]
:PROPERTIES:
:CUSTOM_ID: h-86e0180b-bcf0-484d-bc21-9502d8abeb58
:END:

- State "MARKING"    from              [2019-08-24 Sat 19:27]


1) Bug description:

The emacs session of pdumper loaded type can not covering solaire-mode
feature fully, the solaired buffer has no significant color rendering
efficient, that the solaired buffer has the same color face as the
non-solaired buffer.

1) Influences aspects suspects

   1) Pdumper session lost some features relied by ~solaire-mode~.
   2) This must try another way to configured ~solaire-mode~ with
      pdumper session.


Resolutions:

Its because of that the function ~solaire-mode-swap-bg~ can not used
in theme after procedure hook, in eemacs like
=entropy/emacs-theme-load-after-hook=, its may be a bug that the we
should do the ~solaire-mode-swap-bg~ operation using the idle timer.

** DONE Face spec for posframe not effectived for =posframe= in *pdumper* session
CLOSED: [2020-05-04 Mon 18:56]
:PROPERTIES:
:CUSTOM_ID: h-9ea04c28-bdbe-4099-80b2-c97ba373e62b
:END:

This bug may has the same core issue with [[h-86e0180b-bcf0-484d-bc21-9502d8abeb58][this]].

1) Bug description:

   When using =entropy-sdcv= of its tool-tip show feature, the
   posframe's foreground may not specified by its subroutine
   correctly while after change theme by
   `entropy/emacs-ivy-counsel-load-theme', this bug occurred for while
   the fixing patch for [[h-86e0180b-bcf0-484d-bc21-9502d8abeb58][this]].


Bug has been fixed by [[h-86e0180b-bcf0-484d-bc21-9502d8abeb58][this issue]]

** DONE Hydra ruby doc area can not using underscore char '_' as key notation
CLOSED: [2020-05-04 Mon 18:53]
:PROPERTIES:
:CUSTOM_ID: h-a8ab8a75-1c4d-4df7-859f-a09c58345b82
:END:

- State "DONE"       from "DOING"      [2020-05-04 Mon 18:53]
- State "DOING"      from              [2020-03-05 Thu 21:07]
This bug was push the issue to hydra official project page's [[https://github.com/abo-abo/hydra/issues/366][issue
block]].

*Bug description: *

#+begin_example
Hi hydra maintainer:

I've temporary define a hydra on vanilla emacs env (27.0.90):

(defhydra temp/hydra
  (:hint nil :exit nil :foreign-keys nil)
  "

 temp/hydra

 Common Insert^^
─────────────────────────────────────────────────────────────────────────────────
 _C-c C-,_: Insert a block structure of the type #+begin_foo/#+end_foo
"
  ("C-c C-," org-insert-structure-template :exit t))

With follow warning:
Warning (emacs): Unrecognized key: foo/#+end

Its the bug when the key notation part contained '_' char, is that the ruby doc format limitation which can not using the underscore char in the key notation part (just can used in key stroke region)? Or is their a backslash escape like method to avoid thats strange doc defination?

I known this issue was strained, but what I want is let 'hydra' be more stronger smiley , hope for your help.

Thanks for your greate contribution!
#+end_example

Bug has been fixed by upstream.

** DOING Hydra can not bind key with underscore char "_"
:PROPERTIES:
:CUSTOM_ID: h-37da4ec7-7317-4172-b23c-c03de78760a5
:END:

- State "DOING"      from              [2020-03-05 Thu 21:08]



This bug was the older one, that hasn't been fixed til now, you can
found the reflect github issue [[https://github.com/abo-abo/hydra/issues/161][here]].

** MARKING Treemacs overlay markers puts procedure interrupt while ~lsp-configure-buffer~
:PROPERTIES:
:CUSTOM_ID: h-6610e0a1-e68b-4541-a814-fe3214363866
:END:

- State "MARKING"    from "TODO"       [2021-01-08 Fri 23:30]


This is a bug for treemacs that enable `lsp-configure-buffer' while
`treemacs-follow-mode' is t at the same time, the overlay markers in
treemacs buffer which will cause definitely internal error for the
usage for treemacs after thus, including any face rendering and
operations expecting the correct of overlay marks.

Further more, this bug will may also raise up an strange bug that the
point in treemacs buffer will jump to buffer top when typiing in an
lsp enabled buffer.

For now [2021-01-08 Fri 23:31:17] there's one temporally fixed up
solution that temporally disable =treemacs-follow-mode= before lsp
enable in certain buffer, and then reenable it after thus.

NOTE: may need to report to treemacs author.


** MARKING =lsp-ui-doc-mode= mouse scroll while eobp freeze emacs
:PROPERTIES:
:CUSTOM_ID: h-c02794e4-bdb8-4510-84cb-d668873b02fc
:END:

- State "MARKING"    from              [2021-01-19 Tue 07:41]
Related to bug ->
https://github.com/emacs-lsp/lsp-ui/issues/530#issuecomment-762305991

this will make lsp-ui-doc frame freeze emacs while `mwheel-scroll'
down to the eobp of lsp-doc-buffer.

#+begin_quote
Of counse, the issue is referred to an monuse-wheel problem, after
view hours investigating lsp-ui-doc source where I can not judge the
problem sticker yet but finally focus on one emacs customization: the
mouse-wheel-scroll-amount variable which is the pain for thus did
occur on :

You can set it with (setq mouse-wheel-scroll-amount '(1 ((shift)
. 1))) while the amount default is 5, but many user including me set
it to 1 or any other value less than 5 for the sake of "smooth
scrolling" , Uh.. , the freezing occurred.

This may an emacs internal bug, but I can not ensure that is it,
because, it didn't occurred in the stable version of `lsp-ui' , just
after we use the more mordern doc buffer renderring mechanism, is it?
#+end_quote

*** Update: 2021-01-23 Sat 15:34:16
:PROPERTIES:
:CUSTOM_ID: h-467a7c85-5c2b-4d84-97f4-82eb8f1cc418
:END:

This caused by both of above and follow:
#+BEGIN_SRC emacs-lisp
  (setq mouse-wheel-progressive-speed nil)
#+END_SRC

Thus for now we can built the reproducible template via vanilla emacs:

[[file:lsp-ui-bug530/lsp-ui-bug530.el][lsp-ui-bug530.el]]

Run it with follow methods:
#+BEGIN_SRC sh
  # directly run the elisp file with
  emacs -Q -l lsp-ui-bug530.el
  # or run the init bash script under the same host of this elisp file
  bash run.sh
#+END_SRC

With manually hover reproduced of:
#+begin_quote
Please hover the mounse on the symbol `scanf' or `main' on test.c
buffer thens scroll the lsp-ui-doc frame window by mounse-wheel,
then the bug will be occurred with freezing session, and beeping
sequentially while emacs bell ring is not null.

If the bug not occurred try enter <f11> let emacs judging into
fullscreen and redo above section, this may occurred as well.
#+end_quote


** TODO emacs internal api =looking-back= freeze emacs
:PROPERTIES:
:CUSTOM_ID: h-f551b679-908f-4b64-b08e-e7074d17581e
:END:

This bug caused from an =company-dabbrev-char-regexp= setting of
regexp "[-_/a-zA-Z0-9]+", then the company's dabbrev backend will
invoke the =looking-back= subrouine to determine its matching scope
which used in function =company-grab= which invoked by function
=company-dabbrev--prefix=.

It seems related to the =looking-back= performance issue which
discussed [[https://emacs.stackexchange.com/questions/12742/looking-back-performance][here]]. But since we used *LIMIT* optional in the invocation,
it still lag on, which I'd thought its an emacs bug.

*Reproduce steps:*

Run the =run.sh= in =looking-back-bug_20210816=

** TODO bug of ~ivy-reverse-i-search~ 'ivy-call: Wrong type argument: listp, "..."'
:PROPERTIES:
:CUSTOM_ID: h-17036bdc-c6e9-4ac2-bac8-1c55bd8ecda4
:END:

The bug caused by mis-match canid selected in 'ivy-history' and the
any action of the 'ivy-state' will throw an error such like:
#+begin_example
  Debugger entered--Lisp error: (wrong-type-argument listp "")
    #f(compiled-function (x) #<bytecode 0x155d83410191>)("")
    ivy-call()
    #f(compiled-function (arg1 arg2 &rest rest) "Read a string in the minibuffer, with completion.\n\nPROMPT is a string, normally ending in a colon and a space.\n`ivy-count-format' is prepended to PROMPT during completion.\n\nCOLLECTION is either a list of strings, a function, an alist, or\na hash table, supplied for `minibuffer-completion-table'.\n\nPREDICATE is applied to filter out the COLLECTION immediately.\nThis argument is for compatibility with `completing-read'.\n\nWhen REQUIRE-MATCH is non-nil, only members of COLLECTION can be\nselected.\n\nIf INITIAL-INPUT is non-nil, then insert that input in the\nminibuffer initially.\n\nHISTORY is a name of a variable to hold the completion session\nhistory.\n\nKEYMAP is composed with `ivy-minibuffer-map'.\n\nPRESELECT, when non-nil, determines which one of the candidates\nmatching INITIAL-INPUT to select initially.  An integer stands\nfor the position of the desired candidate in the collection,\ncounting from zero.  Otherwise, use the first occurrence of\nPRESELECT in the collection.  Comparison is first done with\n`equal'.  If that fails, and when applicable, match PRESELECT as\na regular expression.\n\nDEF is for compatibility with `completing-read'.\n\nUPDATE-FN is called each time the candidate list is re-displayed.\n\nWhen SORT is non-nil, `ivy-sort-functions-alist' determines how\nto sort candidates before displaying them.\n\nACTION is a function to call after selecting a candidate.\nIt takes one argument, the selected candidate. If COLLECTION is\nan alist, the argument is a cons cell, otherwise it's a string.\n\nMULTI-ACTION, when non-nil, is called instead of ACTION when\nthere are marked candidates. It takes the list of candidates as\nits only argument. When it's nil, ACTION is called on each marked\ncandidate.\n\nUNWIND is a function of no arguments to call before exiting.\n\nRE-BUILDER is a function transforming input text into a regex\npattern.\n\nMATCHER is a function which can override how candidates are\nfiltered based on user input.  It takes a regex pattern and a\nlist of candidates, and returns the list of matching candidates.\n\nDYNAMIC-COLLECTION is a boolean specifying whether the list of\ncandidates is updated after each input by calling COLLECTION.\n\nEXTRA-PROPS is a plist that can be used to store\ncollection-specific session-specific data.\n\nCALLER is a symbol to uniquely identify the caller to `ivy-read'.\nIt is used, along with COLLECTION, to determine which\ncustomizations apply to the current completion session." #<bytecode 0x1fce82fc2293>)("Reverse-i-search: " nil :keymap (keymap (11 . ivy-reverse-i-search-kill)) :action #f(compiled-function (x) #<bytecode 0x155d83410191>) :caller ivy-reverse-i-search)
    apply(#f(compiled-function (arg1 arg2 &rest rest) "Read a string in the minibuffer, with completion.\n\nPROMPT is a string, normally ending in a colon and a space.\n`ivy-count-format' is prepended to PROMPT during completion.\n\nCOLLECTION is either a list of strings, a function, an alist, or\na hash table, supplied for `minibuffer-completion-table'.\n\nPREDICATE is applied to filter out the COLLECTION immediately.\nThis argument is for compatibility with `completing-read'.\n\nWhen REQUIRE-MATCH is non-nil, only members of COLLECTION can be\nselected.\n\nIf INITIAL-INPUT is non-nil, then insert that input in the\nminibuffer initially.\n\nHISTORY is a name of a variable to hold the completion session\nhistory.\n\nKEYMAP is composed with `ivy-minibuffer-map'.\n\nPRESELECT, when non-nil, determines which one of the candidates\nmatching INITIAL-INPUT to select initially.  An integer stands\nfor the position of the desired candidate in the collection,\ncounting from zero.  Otherwise, use the first occurrence of\nPRESELECT in the collection.  Comparison is first done with\n`equal'.  If that fails, and when applicable, match PRESELECT as\na regular expression.\n\nDEF is for compatibility with `completing-read'.\n\nUPDATE-FN is called each time the candidate list is re-displayed.\n\nWhen SORT is non-nil, `ivy-sort-functions-alist' determines how\nto sort candidates before displaying them.\n\nACTION is a function to call after selecting a candidate.\nIt takes one argument, the selected candidate. If COLLECTION is\nan alist, the argument is a cons cell, otherwise it's a string.\n\nMULTI-ACTION, when non-nil, is called instead of ACTION when\nthere are marked candidates. It takes the list of candidates as\nits only argument. When it's nil, ACTION is called on each marked\ncandidate.\n\nUNWIND is a function of no arguments to call before exiting.\n\nRE-BUILDER is a function transforming input text into a regex\npattern.\n\nMATCHER is a function which can override how candidates are\nfiltered based on user input.  It takes a regex pattern and a\nlist of candidates, and returns the list of matching candidates.\n\nDYNAMIC-COLLECTION is a boolean specifying whether the list of\ncandidates is updated after each input by calling COLLECTION.\n\nEXTRA-PROPS is a plist that can be used to store\ncollection-specific session-specific data.\n\nCALLER is a symbol to uniquely identify the caller to `ivy-read'.\nIt is used, along with COLLECTION, to determine which\ncustomizations apply to the current completion session." #<bytecode 0x1fce82fc2293>) ("Reverse-i-search: " nil :keymap (keymap (11 . ivy-reverse-i-search-kill)) :action #f(compiled-function (x) #<bytecode 0x155d83410191>) :caller ivy-reverse-i-search))
    ivy-read("Reverse-i-search: " nil :keymap (keymap (11 . ivy-reverse-i-search-kill)) :action #f(compiled-function (x) #<bytecode 0x155d83410191>) :caller ivy-reverse-i-search)
    ivy-reverse-i-search()
    funcall-interactively(ivy-reverse-i-search)
    call-interactively(ivy-reverse-i-search nil nil)
    command-execute(ivy-reverse-i-search)
    read-from-minibuffer("sdfsf" nil (keymap keymap (67108910 lambda nil (interactive) (message "You can not using xref functions in minibuffer")) (36 . ivy-magic-read-file-env) (3 keymap (19 . ivy-rotate-sort) (1 . ivy-toggle-ignore) (15 . ivy-occur)) (33554464 . ivy-restrict-to-matches) (15 . hydra-ivy/body) (22 . ivy-scroll-up-command) (prior . ivy-scroll-down-command) (next . ivy-scroll-up-command) (7 . minibuffer-keyboard-quit) (right . ivy-forward-char) (32 . self-insert-command) (18 . ivy-reverse-i-search) (remap keymap (describe-mode . ivy-help) (kill-ring-save . ivy-kill-ring-save) (kill-whole-line . ivy-kill-whole-line) (kill-line . ivy-kill-line) (scroll-down-command . ivy-scroll-down-command) (scroll-up-command . ivy-scroll-up-command) (end-of-buffer . ivy-end-of-buffer) (beginning-of-buffer . ivy-beginning-of-buffer) (kill-word . ivy-kill-word) (forward-char . ivy-forward-char) (delete-char . ivy-delete-char) (backward-kill-word . ivy-backward-kill-word) (backward-delete-char-untabify . ivy-backward-delete-char) (delete-backward-char . ivy-backward-delete-char) (previous-line . ivy-previous-line) (next-line . ivy-next-line)) (9 . ivy-partial-or-done) (10 . ivy-alt-done) (27 keymap (67108910 lambda nil (interactive) (message "You can not using xref functions in minibuffer")) (44 lambda nil (interactive) (message "You can not using xref functions in minibuffer")) (46 lambda nil (interactive) (message "You can not using xref functions in minibuffer")) (1 . ivy-read-action) (15 . ivy-dispatching-call) (111 . ivy-dispatching-done) (25 . ivy-insert-current-full) (105 . ivy-insert-current) (106 . ivy-yank-word) (114 . ivy-toggle-regexp-quote) (97 . ivy-toggle-marks) (16 . ivy-previous-line-and-call) (14 . ivy-next-line-and-call) (118 . ivy-scroll-down-command) (112 . ivy-previous-history-element) (110 . ivy-next-history-element) (10 . ivy-immediate-done) (13 . ivy-call)) (mouse-3 . ivy-mouse-dispatching-done) (mouse-1 . ivy-mouse-done) (down-mouse-1 . ignore) (13 . ivy-done)) nil ivy-history)
    #f(compiled-function (arg1 arg2 &rest rest) "Read a string in the minibuffer, with completion.\n\nPROMPT is a string, normally ending in a colon and a space.\n`ivy-count-format' is prepended to PROMPT during completion.\n\nCOLLECTION is either a list of strings, a function, an alist, or\na hash table, supplied for `minibuffer-completion-table'.\n\nPREDICATE is applied to filter out the COLLECTION immediately.\nThis argument is for compatibility with `completing-read'.\n\nWhen REQUIRE-MATCH is non-nil, only members of COLLECTION can be\nselected.\n\nIf INITIAL-INPUT is non-nil, then insert that input in the\nminibuffer initially.\n\nHISTORY is a name of a variable to hold the completion session\nhistory.\n\nKEYMAP is composed with `ivy-minibuffer-map'.\n\nPRESELECT, when non-nil, determines which one of the candidates\nmatching INITIAL-INPUT to select initially.  An integer stands\nfor the position of the desired candidate in the collection,\ncounting from zero.  Otherwise, use the first occurrence of\nPRESELECT in the collection.  Comparison is first done with\n`equal'.  If that fails, and when applicable, match PRESELECT as\na regular expression.\n\nDEF is for compatibility with `completing-read'.\n\nUPDATE-FN is called each time the candidate list is re-displayed.\n\nWhen SORT is non-nil, `ivy-sort-functions-alist' determines how\nto sort candidates before displaying them.\n\nACTION is a function to call after selecting a candidate.\nIt takes one argument, the selected candidate. If COLLECTION is\nan alist, the argument is a cons cell, otherwise it's a string.\n\nMULTI-ACTION, when non-nil, is called instead of ACTION when\nthere are marked candidates. It takes the list of candidates as\nits only argument. When it's nil, ACTION is called on each marked\ncandidate.\n\nUNWIND is a function of no arguments to call before exiting.\n\nRE-BUILDER is a function transforming input text into a regex\npattern.\n\nMATCHER is a function which can override how candidates are\nfiltered based on user input.  It takes a regex pattern and a\nlist of candidates, and returns the list of matching candidates.\n\nDYNAMIC-COLLECTION is a boolean specifying whether the list of\ncandidates is updated after each input by calling COLLECTION.\n\nEXTRA-PROPS is a plist that can be used to store\ncollection-specific session-specific data.\n\nCALLER is a symbol to uniquely identify the caller to `ivy-read'.\nIt is used, along with COLLECTION, to determine which\ncustomizations apply to the current completion session." #<bytecode 0x1fce82fc2293>)("sdfsf" (sdfasfasd safsadf) :action (closure (t) (x) (setq temp/xx x)))
    apply(#f(compiled-function (arg1 arg2 &rest rest) "Read a string in the minibuffer, with completion.\n\nPROMPT is a string, normally ending in a colon and a space.\n`ivy-count-format' is prepended to PROMPT during completion.\n\nCOLLECTION is either a list of strings, a function, an alist, or\na hash table, supplied for `minibuffer-completion-table'.\n\nPREDICATE is applied to filter out the COLLECTION immediately.\nThis argument is for compatibility with `completing-read'.\n\nWhen REQUIRE-MATCH is non-nil, only members of COLLECTION can be\nselected.\n\nIf INITIAL-INPUT is non-nil, then insert that input in the\nminibuffer initially.\n\nHISTORY is a name of a variable to hold the completion session\nhistory.\n\nKEYMAP is composed with `ivy-minibuffer-map'.\n\nPRESELECT, when non-nil, determines which one of the candidates\nmatching INITIAL-INPUT to select initially.  An integer stands\nfor the position of the desired candidate in the collection,\ncounting from zero.  Otherwise, use the first occurrence of\nPRESELECT in the collection.  Comparison is first done with\n`equal'.  If that fails, and when applicable, match PRESELECT as\na regular expression.\n\nDEF is for compatibility with `completing-read'.\n\nUPDATE-FN is called each time the candidate list is re-displayed.\n\nWhen SORT is non-nil, `ivy-sort-functions-alist' determines how\nto sort candidates before displaying them.\n\nACTION is a function to call after selecting a candidate.\nIt takes one argument, the selected candidate. If COLLECTION is\nan alist, the argument is a cons cell, otherwise it's a string.\n\nMULTI-ACTION, when non-nil, is called instead of ACTION when\nthere are marked candidates. It takes the list of candidates as\nits only argument. When it's nil, ACTION is called on each marked\ncandidate.\n\nUNWIND is a function of no arguments to call before exiting.\n\nRE-BUILDER is a function transforming input text into a regex\npattern.\n\nMATCHER is a function which can override how candidates are\nfiltered based on user input.  It takes a regex pattern and a\nlist of candidates, and returns the list of matching candidates.\n\nDYNAMIC-COLLECTION is a boolean specifying whether the list of\ncandidates is updated after each input by calling COLLECTION.\n\nEXTRA-PROPS is a plist that can be used to store\ncollection-specific session-specific data.\n\nCALLER is a symbol to uniquely identify the caller to `ivy-read'.\nIt is used, along with COLLECTION, to determine which\ncustomizations apply to the current completion session." #<bytecode 0x1fce82fc2293>) ("sdfsf" (sdfasfasd safsadf) :action (closure (t) (x) (setq temp/xx x))))
    ivy-read("sdfsf" (sdfasfasd safsadf) :action (closure (t) (x) (setq temp/xx x)))
    (progn (ivy-read "sdfsf" '(sdfasfasd safsadf) :action #'(lambda (x) (setq temp/xx x))))
    eval((progn (ivy-read "sdfsf" '(sdfasfasd safsadf) :action #'(lambda (x) (setq temp/xx x)))) t)
    elisp--eval-last-sexp(nil)
    eval-last-sexp(nil)
    funcall-interactively(eval-last-sexp nil)
    call-interactively(eval-last-sexp nil nil)
    command-execute(eval-last-sexp)
#+end_example

The simple reputation can be calling an simple =ivy-read= context:
#+begin_src elisp
  (ivy-read "input sth: "
            '("a" "b"))
#+end_src
Run above code and =\C-r= to trigger the ~ivy-reverse-i-search~ the
input any code and =RET= trigger ~ivy-done~ then the error occurred
(note: please toggle on debug to see the details).

For now mine temporally fixed method is to assign the =require-match=
to its subroutine which forcely ignore any non-matched selection.

** TODO bug of `run-with-idle-timer' with 0 idle delay in emacs start up time
:PROPERTIES:
:CUSTOM_ID: h-6d28b926-88c0-4286-a0de-9ee7b4a7516c
:END:

When emacs is startup with an idle timer as end procedure in
=init.el=, then there're two pre-typed char =[= and =I= are preformed
into the echo area of that timer.

- Reproduce: [[file:0-idle-delay-init-bug/][here]]

  We can not reproduce in arbitary environment, since it seems related
  to the shell env the emacs start at, espacially in tmux session.

- Temporally resolve dealing: set the idle delay closed to 0 but not
  approach to it.

*** log: [2021-09-25 Sat 22:03:52]:
:PROPERTIES:
:CUSTOM_ID: h-8b80c803-94a9-4208-b309-2c00aca1a784
:END:

It seems that the idle delay less than 0.001 also will trigger this
bug.

*** log: [2021-10-01 Fri 23:13:38]
:PROPERTIES:
:CUSTOM_ID: h-60551428-a42b-4c82-833f-d12c31372577
:END:

It seems related to X11 protocal on linux of gnome DE since it
disappeared while using Xwayland gnome session.

** TODO bug of system IME (e.g. fcitx) let emacs GUI fast hints hang without any response in linux desktop
:PROPERTIES:
:CUSTOM_ID: h-12379f67-4311-4433-86e3-a6fdfd886112
:END:

Some IME (input method editor) hang emacs without any response in GUI
mode in Gnome shell while fast scroll screen using arrow down/up
(i.e. ~next-line~ / ~previous-line~) with fast repeat key typing
enable in system setting or keyboard hardware embedded utils.

The only way currently to fix this is to disable the IME in whole
emacs session's environment:
#+begin_src shell
unset GTL_IM_MODULE
unset GTK_IM_MODULE
unset QT_IM_MODULE
unset XMODIFIERS
exec emacs "$@"
#+end_src

Put above be the emacs.sh or other caller format with example or just
unseet these environment variable.

Or modify the desktop file or the desktop custom keyboard shortcut for
as ~EXEC=env GTL_IM_MODULE= GTK_IM_MODULE= QT_IM_MODULE= XMODIFIERS= emacs %F~ or
~env GTL_IM_MODULE= GTK_IM_MODULE= QT_IM_MODULE= XMODIFIERS= emacs~.

** MARKING bug of =large-file-warning-threshold= is nil in some occasions
:PROPERTIES:
:CUSTOM_ID: h-ca204a62-9e15-4f3b-ae23-f31b6046a9c5
:END:
- State "MARKING"    from "UPDATE"     [2022-02-06 Sun 07:56]
=large-file-warning-threshold= is nil in some occasions even if we
bind it in top level.

See below baacktrace:

#+begin_example
  Debugger entered--Lisp error: (wrong-type-argument number-or-marker-p nil)
    >(20257471 nil)
    (or (> (buffer-size) large-file-warning-threshold) (progn (require 'so-long) (let ((so-long-threshold __unreadable-file-long-threshold)) (so-long-detected-long-line-p))))
    (save-current-buffer (set-buffer buff) (or (> (buffer-size) large-file-warning-threshold) (progn (require 'so-long) (let ((so-long-threshold __unreadable-file-long-threshold)) (so-long-detected-long-line-p)))))
    (lambda (buff) (save-current-buffer (set-buffer buff) (or (> (buffer-size) large-file-warning-threshold) (progn (require 'so-long) (let ((so-long-threshold __unreadable-file-long-threshold)) (so-long-detected-long-line-p))))))(#<buffer tempfile.txt>)
    funcall((lambda (buff) (save-current-buffer (set-buffer buff) (or (> (buffer-size) large-file-warning-threshold) (progn (require 'so-long) (let ((so-long-threshold __unreadable-file-long-threshold)) (so-long-detected-long-line-p)))))) #<buffer tempfile.txt>)
    (if (funcall entropy/emacs-unreadable-buffer-judge-function (current-buffer)) nil (entropy/emacs-basic-smooth-scrolling-mode 1))
    entropy/emacs-basic-smooth-scrolling-mode-turn-on()
    (if entropy/emacs-basic-smooth-scrolling-mode (progn (entropy/emacs-basic-smooth-scrolling-mode -1) (entropy/emacs-basic-smooth-scrolling-mode-turn-on)) (entropy/emacs-basic-smooth-scrolling-mode-turn-on))
    (if (eq entropy/emacs-basic-smooth-scrolling-mode-major-mode major-mode) nil (if entropy/emacs-basic-smooth-scrolling-mode (progn (entropy/emacs-basic-smooth-scrolling-mode -1) (entropy/emacs-basic-smooth-scrolling-mode-turn-on)) (entropy/emacs-basic-smooth-scrolling-mode-turn-on)))
    (if entropy/emacs-basic-smooth-scrolling-mode-set-explicitly nil (if (eq entropy/emacs-basic-smooth-scrolling-mode-major-mode major-mode) nil (if entropy/emacs-basic-smooth-scrolling-mode (progn (entropy/emacs-basic-smooth-scrolling-mode -1) (entropy/emacs-basic-smooth-scrolling-mode-turn-on)) (entropy/emacs-basic-smooth-scrolling-mode-turn-on))))
    (save-current-buffer (set-buffer buf) (if entropy/emacs-basic-smooth-scrolling-mode-set-explicitly nil (if (eq entropy/emacs-basic-smooth-scrolling-mode-major-mode major-mode) nil (if entropy/emacs-basic-smooth-scrolling-mode (progn (entropy/emacs-basic-smooth-scrolling-mode -1) (entropy/emacs-basic-smooth-scrolling-mode-turn-on)) (entropy/emacs-basic-smooth-scrolling-mode-turn-on)))) (setq entropy/emacs-basic-smooth-scrolling-mode-major-mode major-mode))
    (progn (save-current-buffer (set-buffer buf) (if entropy/emacs-basic-smooth-scrolling-mode-set-explicitly nil (if (eq entropy/emacs-basic-smooth-scrolling-mode-major-mode major-mode) nil (if entropy/emacs-basic-smooth-scrolling-mode (progn (entropy/emacs-basic-smooth-scrolling-mode -1) (entropy/emacs-basic-smooth-scrolling-mode-turn-on)) (entropy/emacs-basic-smooth-scrolling-mode-turn-on)))) (setq entropy/emacs-basic-smooth-scrolling-mode-major-mode major-mode)))
    (if (buffer-live-p buf) (progn (save-current-buffer (set-buffer buf) (if entropy/emacs-basic-smooth-scrolling-mode-set-explicitly nil (if (eq entropy/emacs-basic-smooth-scrolling-mode-major-mode major-mode) nil (if entropy/emacs-basic-smooth-scrolling-mode (progn (entropy/emacs-basic-smooth-scrolling-mode -1) (entropy/emacs-basic-smooth-scrolling-mode-turn-on)) (entropy/emacs-basic-smooth-scrolling-mode-turn-on)))) (setq entropy/emacs-basic-smooth-scrolling-mode-major-mode major-mode))))
    (while --dolist-tail-- (setq buf (car --dolist-tail--)) (if (buffer-live-p buf) (progn (save-current-buffer (set-buffer buf) (if entropy/emacs-basic-smooth-scrolling-mode-set-explicitly nil (if (eq entropy/emacs-basic-smooth-scrolling-mode-major-mode major-mode) nil (if entropy/emacs-basic-smooth-scrolling-mode (progn ... ...) (entropy/emacs-basic-smooth-scrolling-mode-turn-on)))) (setq entropy/emacs-basic-smooth-scrolling-mode-major-mode major-mode)))) (setq --dolist-tail-- (cdr --dolist-tail--)))
    (let ((--dolist-tail-- buffers) buf) (while --dolist-tail-- (setq buf (car --dolist-tail--)) (if (buffer-live-p buf) (progn (save-current-buffer (set-buffer buf) (if entropy/emacs-basic-smooth-scrolling-mode-set-explicitly nil (if (eq entropy/emacs-basic-smooth-scrolling-mode-major-mode major-mode) nil (if entropy/emacs-basic-smooth-scrolling-mode ... ...))) (setq entropy/emacs-basic-smooth-scrolling-mode-major-mode major-mode)))) (setq --dolist-tail-- (cdr --dolist-tail--))))
    (let ((buffers entropy/emacs-basic-smooth-scrolling-global-mode-buffers)) (setq entropy/emacs-basic-smooth-scrolling-global-mode-buffers nil) (let ((--dolist-tail-- buffers) buf) (while --dolist-tail-- (setq buf (car --dolist-tail--)) (if (buffer-live-p buf) (progn (save-current-buffer (set-buffer buf) (if entropy/emacs-basic-smooth-scrolling-mode-set-explicitly nil (if ... nil ...)) (setq entropy/emacs-basic-smooth-scrolling-mode-major-mode major-mode)))) (setq --dolist-tail-- (cdr --dolist-tail--)))))
    entropy/emacs-basic-smooth-scrolling-global-mode-enable-in-buffers()
    run-hooks(change-major-mode-after-body-hook after-change-major-mode-hook)
    normal-mode(t)
    after-find-file(nil t)
    find-file-noselect-1(#<buffer tempfile.txt> "/tmp/tempfile.txt" nil nil "/tmp/he..." (878091 41))
    #f(compiled-function (filename &optional nowarn rawfile wildcards) "Read file FILENAME into a buffer and return the buffer.\nIf a buffer exists visiting FILENAME, return that one, but\nverify that the file has not changed since visited or saved.\nThe buffer is not selected, just returned to the caller.\nOptional second arg NOWARN non-nil means suppress any warning messages.\nOptional third arg RAWFILE non-nil means the file is read literally.\nOptional fourth arg WILDCARDS non-nil means do wildcard processing\nand visit all the matching files.  When wildcards are actually\nused and expanded, return a list of buffers that are visiting\nthe various files." #<bytecode 0x1febf8f6552d>)("/tmp/tempfile.txt")
    apply(#f(compiled-function (filename &optional nowarn rawfile wildcards) "Read file FILENAME into a buffer and return the buffer.\nIf a buffer exists visiting FILENAME, return that one, but\nverify that the file has not changed since visited or saved.\nThe buffer is not selected, just returned to the caller.\nOptional second arg NOWARN non-nil means suppress any warning messages.\nOptional third arg RAWFILE non-nil means the file is read literally.\nOptional fourth arg WILDCARDS non-nil means do wildcard processing\nand visit all the matching files.  When wildcards are actually\nused and expanded, return a list of buffers that are visiting\nthe various files." #<bytecode 0x1febf8f6552d>) "/tmp/tempfile.txt")
    (let ((find-file-visit-truename (and (not (equal filename ftruename)) (not (file-directory-p filename))))) (apply orig-func orig-args))
    (let* ((filename (let* ((path (car orig-args))) (if (and (> (length path) 1) (eq 47 (aref path ...))) (substring path 0 -1) path))) (rest (cdr orig-args)) (ftruename (let* ((path (file-truename filename))) (if (and (> (length path) 1) (eq 47 (aref path ...))) (substring path 0 -1) path)))) (let ((find-file-visit-truename (and (not (equal filename ftruename)) (not (file-directory-p filename))))) (apply orig-func orig-args)))
    (if (__entropy/emacs-init-tramp-file-p (car orig-args)) (apply orig-func orig-args) (let* ((filename (let* ((path (car orig-args))) (if (and (> ... 1) (eq 47 ...)) (substring path 0 -1) path))) (rest (cdr orig-args)) (ftruename (let* ((path (file-truename filename))) (if (and (> ... 1) (eq 47 ...)) (substring path 0 -1) path)))) (let ((find-file-visit-truename (and (not (equal filename ftruename)) (not (file-directory-p filename))))) (apply orig-func orig-args))))
    entropy/emacs--dwim-abs-find-file(#f(compiled-function (filename &optional nowarn rawfile wildcards) "Read file FILENAME into a buffer and return the buffer.\nIf a buffer exists visiting FILENAME, return that one, but\nverify that the file has not changed since visited or saved.\nThe buffer is not selected, just returned to the caller.\nOptional second arg NOWARN non-nil means suppress any warning messages.\nOptional third arg RAWFILE non-nil means the file is read literally.\nOptional fourth arg WILDCARDS non-nil means do wildcard processing\nand visit all the matching files.  When wildcards are actually\nused and expanded, return a list of buffers that are visiting\nthe various files." #<bytecode 0x1febf8f6552d>) "/tmp/tempfile.txt")
    apply(entropy/emacs--dwim-abs-find-file #f(compiled-function (filename &optional nowarn rawfile wildcards) "Read file FILENAME into a buffer and return the buffer.\nIf a buffer exists visiting FILENAME, return that one, but\nverify that the file has not changed since visited or saved.\nThe buffer is not selected, just returned to the caller.\nOptional second arg NOWARN non-nil means suppress any warning messages.\nOptional third arg RAWFILE non-nil means the file is read literally.\nOptional fourth arg WILDCARDS non-nil means do wildcard processing\nand visit all the matching files.  When wildcards are actually\nused and expanded, return a list of buffers that are visiting\nthe various files." #<bytecode 0x1febf8f6552d>) "/tmp/tempfile.txt")
    find-file-noselect("/tmp/tempfile.txt")
    (let* ((fnew-p nil) (fname (if (file-exists-p filename) filename (setq fnew-p t) (if do-read (user-error "[error] Please do read from an exist file!") (hexie/subr-touch-file filename) filename))) (inhibit-read-only t) (large-file-warning-threshold nil) (buffer (find-file-noselect filename))) (if (null do-read) (if (or fnew-p (or force-renew (yes-or-no-p "Renew it? "))) (progn (save-current-buffer (set-buffer buffer) (delete-region (point-min) (point-max)) (hexie/subr-insert-sexp hexie/api-core-database) (save-buffer)))) (save-current-buffer (set-buffer buffer) (goto-char (point-min)) (setq hexie/api-core-database (hexie/subr-receive-sexp)))) (kill-buffer buffer))
    hexie/api-core-database-save/read("/tmp/tempfile.txt" t)
    funcall-interactively(hexie/api-core-database-save/read "/tmp/tempfile.txt" t)
    call-interactively(hexie/api-core-database-save/read record nil)
    command-execute(hexie/api-core-database-save/read record)
    counsel-M-x-action("hexie/api-core-database-save/read")
    ivy-call()
    #f(compiled-function (arg1 arg2 &rest rest) "Read a string in the minibuffer, with completion.\n\nPROMPT is a string, normally ending in a colon and a space.\n`ivy-count-format' is prepended to PROMPT during completion.\n\nCOLLECTION is either a list of strings, a function, an alist, or\na hash table, supplied for `minibuffer-completion-table'.\n\nPREDICATE is applied to filter out the COLLECTION immediately.\nThis argument is for compatibility with `completing-read'.\n\nWhen REQUIRE-MATCH is non-nil, only members of COLLECTION can be\nselected.\n\nIf INITIAL-INPUT is non-nil, then insert that input in the\nminibuffer initially.\n\nHISTORY is a name of a variable to hold the completion session\nhistory.\n\nKEYMAP is composed with `ivy-minibuffer-map'.\n\nPRESELECT, when non-nil, determines which one of the candidates\nmatching INITIAL-INPUT to select initially.  An integer stands\nfor the position of the desired candidate in the collection,\ncounting from zero.  Otherwise, use the first occurrence of\nPRESELECT in the collection.  Comparison is first done with\n`equal'.  If that fails, and when applicable, match PRESELECT as\na regular expression.\n\nDEF is for compatibility with `completing-read'.\n\nUPDATE-FN is called each time the candidate list is re-displayed.\n\nWhen SORT is non-nil, `ivy-sort-functions-alist' determines how\nto sort candidates before displaying them.\n\nACTION is a function to call after selecting a candidate.\nIt takes one argument, the selected candidate. If COLLECTION is\nan alist, the argument is a cons cell, otherwise it's a string.\n\nMULTI-ACTION, when non-nil, is called instead of ACTION when\nthere are marked candidates. It takes the list of candidates as\nits only argument. When it's nil, ACTION is called on each marked\ncandidate.\n\nUNWIND is a function of no arguments to call before exiting.\n\nRE-BUILDER is a function transforming input text into a regex\npattern.\n\nMATCHER is a function which can override how candidates are\nfiltered based on user input.  It takes a regex pattern and a\nlist of candidates, and returns the list of matching candidates.\n\nDYNAMIC-COLLECTION is a boolean specifying whether the list of\ncandidates is updated after each input by calling COLLECTION.\n\nEXTRA-PROPS is a plist that can be used to store\ncollection-specific session-specific data.\n\nCALLER is a symbol to uniquely identify the caller to `ivy-read'.\nIt is used, along with COLLECTION, to determine which\ncustomizations apply to the current completion session." #<bytecode 0x155ee0a9b5c5>)("M-x " [__adv/around/entropy/emacs-individual-hydra--entropy/emacs-hydra-hollow-top-dispatch--hydra-category-1-caller/hl-todo-previous-and-exit/with-pretty-hydra-hack localp ada-ref-man epg-context-signers locals 0 tramp-compat-exec-path xselect--int-to-cons __adv/around/entropy/emacs-individual-hydra--entropy/emacs-individual-hydra-random-name-of-6--hydra-category-0-caller/body/__use-posframe-show avy-words epg--status-VALIDSIG all-the-icons-ivy-rich--project-file-path eemacs-use-package/hydra-hollow-defer-parse/for-shackle/judger-id_17 eemacs-use-package/hydra-hollow-defer-parse/for-shackle/judger-id_18 org-emphasis-regexp-components Sarasa\ Fixed\ J tramp-gvfs-handle-copy-file tramp-do-copy-or-rename-file-out-of-band entropy/emacs-org-keymap-group-$common-open hexie/subr-org-subhead-exists-p _message hexie/api-core-registry-pos-obj eemacs-use-package/hydra-hollow-defer-parse/for-entropy-open-with/judger-id_59 Backward\ 1\ Year cl-print--preprocess Find\ file\ in\ directory selinux-context Insert\ Diary\ Entry wicon archive_type conf-space-mode-map 0 cl--struct-epg-signature-p entropy/cl-read-file-name \" cpbdins $ test-command Info-apropos-find-file \' :name-match M-kp-down tramp-cache-data org-babel-results-keyword eglot-autoshutdown dont-create not-at-beginning-of-line f-empty\? expired calendar-debug-sexp ...] :predicate #f(compiled-function (sym) #<bytecode 0x155ee121eced>) :require-match t :history counsel-M-x-history :action counsel-M-x-action :keymap (keymap (67108908 . counsel--info-lookup-symbol) (67108910 . counsel-find-symbol)) :initial-input nil :caller counsel-M-x)
    apply(#f(compiled-function (arg1 arg2 &rest rest) "Read a string in the minibuffer, with completion.\n\nPROMPT is a string, normally ending in a colon and a space.\n`ivy-count-format' is prepended to PROMPT during completion.\n\nCOLLECTION is either a list of strings, a function, an alist, or\na hash table, supplied for `minibuffer-completion-table'.\n\nPREDICATE is applied to filter out the COLLECTION immediately.\nThis argument is for compatibility with `completing-read'.\n\nWhen REQUIRE-MATCH is non-nil, only members of COLLECTION can be\nselected.\n\nIf INITIAL-INPUT is non-nil, then insert that input in the\nminibuffer initially.\n\nHISTORY is a name of a variable to hold the completion session\nhistory.\n\nKEYMAP is composed with `ivy-minibuffer-map'.\n\nPRESELECT, when non-nil, determines which one of the candidates\nmatching INITIAL-INPUT to select initially.  An integer stands\nfor the position of the desired candidate in the collection,\ncounting from zero.  Otherwise, use the first occurrence of\nPRESELECT in the collection.  Comparison is first done with\n`equal'.  If that fails, and when applicable, match PRESELECT as\na regular expression.\n\nDEF is for compatibility with `completing-read'.\n\nUPDATE-FN is called each time the candidate list is re-displayed.\n\nWhen SORT is non-nil, `ivy-sort-functions-alist' determines how\nto sort candidates before displaying them.\n\nACTION is a function to call after selecting a candidate.\nIt takes one argument, the selected candidate. If COLLECTION is\nan alist, the argument is a cons cell, otherwise it's a string.\n\nMULTI-ACTION, when non-nil, is called instead of ACTION when\nthere are marked candidates. It takes the list of candidates as\nits only argument. When it's nil, ACTION is called on each marked\ncandidate.\n\nUNWIND is a function of no arguments to call before exiting.\n\nRE-BUILDER is a function transforming input text into a regex\npattern.\n\nMATCHER is a function which can override how candidates are\nfiltered based on user input.  It takes a regex pattern and a\nlist of candidates, and returns the list of matching candidates.\n\nDYNAMIC-COLLECTION is a boolean specifying whether the list of\ncandidates is updated after each input by calling COLLECTION.\n\nEXTRA-PROPS is a plist that can be used to store\ncollection-specific session-specific data.\n\nCALLER is a symbol to uniquely identify the caller to `ivy-read'.\nIt is used, along with COLLECTION, to determine which\ncustomizations apply to the current completion session." #<bytecode 0x155ee0a9b5c5>) ("M-x " [__adv/around/entropy/emacs-individual-hydra--entropy/emacs-hydra-hollow-top-dispatch--hydra-category-1-caller/hl-todo-previous-and-exit/with-pretty-hydra-hack localp ada-ref-man epg-context-signers locals 0 tramp-compat-exec-path xselect--int-to-cons __adv/around/entropy/emacs-individual-hydra--entropy/emacs-individual-hydra-random-name-of-6--hydra-category-0-caller/body/__use-posframe-show avy-words epg--status-VALIDSIG all-the-icons-ivy-rich--project-file-path eemacs-use-package/hydra-hollow-defer-parse/for-shackle/judger-id_17 eemacs-use-package/hydra-hollow-defer-parse/for-shackle/judger-id_18 org-emphasis-regexp-components Sarasa\ Fixed\ J tramp-gvfs-handle-copy-file tramp-do-copy-or-rename-file-out-of-band entropy/emacs-org-keymap-group-$common-open hexie/subr-org-subhead-exists-p _message hexie/api-core-registry-pos-obj eemacs-use-package/hydra-hollow-defer-parse/for-entropy-open-with/judger-id_59 Backward\ 1\ Year cl-print--preprocess Find\ file\ in\ directory selinux-context Insert\ Diary\ Entry wicon archive_type conf-space-mode-map 0 cl--struct-epg-signature-p entropy/cl-read-file-name \" cpbdins $ test-command Info-apropos-find-file \' :name-match M-kp-down tramp-cache-data org-babel-results-keyword eglot-autoshutdown dont-create not-at-beginning-of-line f-empty\? expired calendar-debug-sexp ...] :predicate #f(compiled-function (sym) #<bytecode 0x155ee121eced>) :require-match t :history counsel-M-x-history :action counsel-M-x-action :keymap (keymap (67108908 . counsel--info-lookup-symbol) (67108910 . counsel-find-symbol)) :initial-input nil :caller counsel-M-x))
    ivy-read("M-x " [__adv/around/entropy/emacs-individual-hydra--entropy/emacs-hydra-hollow-top-dispatch--hydra-category-1-caller/hl-todo-previous-and-exit/with-pretty-hydra-hack localp ada-ref-man epg-context-signers locals 0 tramp-compat-exec-path xselect--int-to-cons __adv/around/entropy/emacs-individual-hydra--entropy/emacs-individual-hydra-random-name-of-6--hydra-category-0-caller/body/__use-posframe-show avy-words epg--status-VALIDSIG all-the-icons-ivy-rich--project-file-path eemacs-use-package/hydra-hollow-defer-parse/for-shackle/judger-id_17 eemacs-use-package/hydra-hollow-defer-parse/for-shackle/judger-id_18 org-emphasis-regexp-components Sarasa\ Fixed\ J tramp-gvfs-handle-copy-file tramp-do-copy-or-rename-file-out-of-band entropy/emacs-org-keymap-group-$common-open hexie/subr-org-subhead-exists-p _message hexie/api-core-registry-pos-obj eemacs-use-package/hydra-hollow-defer-parse/for-entropy-open-with/judger-id_59 Backward\ 1\ Year cl-print--preprocess Find\ file\ in\ directory selinux-context Insert\ Diary\ Entry wicon archive_type conf-space-mode-map 0 cl--struct-epg-signature-p entropy/cl-read-file-name \" cpbdins $ test-command Info-apropos-find-file \' :name-match M-kp-down tramp-cache-data org-babel-results-keyword eglot-autoshutdown dont-create not-at-beginning-of-line f-empty\? expired calendar-debug-sexp ...] :predicate #f(compiled-function (sym) #<bytecode 0x155ee121eced>) :require-match t :history counsel-M-x-history :action counsel-M-x-action :keymap (keymap (67108908 . counsel--info-lookup-symbol) (67108910 . counsel-find-symbol)) :initial-input nil :caller counsel-M-x)
    counsel-M-x()
    funcall-interactively(counsel-M-x)
    call-interactively(counsel-M-x nil nil)
    command-execute(counsel-M-x)

#+end_example

Its main cause that we patched =turn-on-font-lock= with
=entropy/emacs--supress-fontlock-mode=, why? maybe some clojure issue?

So that we now temporally fix it by using an
=entropy/emacs-large-file-warning-threshold= top level declaration to
avoid it and bind =large-file-warning-threshold= value to its value at
init time.



** TODO newsticker buggy
:PROPERTIES:
:CUSTOM_ID: h-936e4fb3-57d7-4958-89d9-a1cdfb52c495
:END:
#+begin_example
Error: HTML rendering failed: args-out-of-range, (*Newsticker Item* #<marker at 3538 in *Newsticker List*> #<marker (moves after insertion) at 3595 in *Newsticker List*>)
#+end_example

This bug when hint item in *Virtual Feeds* list.

*Reproduction:*

Run the bash file [[./h-936e4fb3-57d7-4958-89d9-a1cdfb52c495/start.sh]]

* COMMENT Local Varaibles
:PROPERTIES:
:CUSTOM_ID: h-550f1e2d-23da-47d3-98e1-cd8be05baa7d
:END:
# Local Variables:
# fill-column: 70
# org-cycle-separator-lines: 8
# org-adapt-indentation: nil
# org-download-image-dir: "./img/"
# eval: (auto-fill-mode)
# End:
